# 线性结构

0x00 什么是线性结构

0x01 线性结构有什么特点



# 顺序表

0x00 什么是顺序表
     将元素存储在一片连续的内存空间当中。

0x01 顺序表的结构种类
     一体式结构：存储的数据类型是一样的。比如int型，就只有int型的数据放在那一片内存空间当中。
     分离式结构：存储的数据类型不止一种。可能先存int型，然后再存一个str类型。
     
     当一体式结构的时候，可以通过  首数据 的地址，加上偏移量直接进行寻址来找到数据。
     当分离式结构的时候，不能直接通过偏移进行寻址，要通过具体地址来寻找数据。
     

0x02 顺序表的组成
     表头信息+数据。
     
     一体式结构：（地址）+数据；
     分离式结构：（地址+数据）+（地址+数据）。

0x03 顺序表的特点
     在内存当中的存储是连续的。

0x04 顺序表的操作
     顺序表添加元素；
     顺序表删除元素。
     
0x05 顺序表的作用
     用于数据存储。

0x06 代码实现


# 链表

0x00 什么是链表
     将元素存储在非连续的内存空间中。

0x01 链表的类型
     a.单链表
     
0x02 链表的组成
     a.单链表的组成：
     头结点=值+指向下一个结点的指针
     中间若干节点
     尾结点=值+指向一个空值的指针

0x05 单链表的操作
     增删改查

0x04 链表的作用
     a.单链表的作用
       将数据存储在一段不连续的内存空间当中。

0x03 链表的实现
     a.单链表的实现
     
     先实现一个节点的创建
     
     # 节点

     # 节点包含：当前节点的数据内容
     #           和指向下一个节点的指针
     # 链表中节点的实现
     class SingleNode(object):
         def __init__(self, item):
             # 当前节点的内容
             self.item = item
             # 指向下一个节点的指针
             self.next = None

     node_one = SingleNode(1)
     print(node_one)
     print(f'内容为{node_one.item}')
     print(f'下一节点的指针为{node_one.next}')

     <__main__.SingleNode object at 0x00000281DF3628C8>
     内容为1
     下一节点的指针为None
     >>> 
     
     然后实现单链表的创建：
     
     # 单链表
